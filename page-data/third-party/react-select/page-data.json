{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/third-party/react-select/","result":{"data":{"mdx":{"id":"4ba28c7a-748a-5b19-8610-2b678093d6e2","excerpt":"React Select React Select  is the coolest ReactJS custom  <select>  library. If you're not using it, we recommend using it instead of using simple  <selectâ€¦","fields":{"slug":"/third-party/react-select/"},"frontmatter":{"title":"","description":null,"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"react-select\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#react-select\",\n    \"aria-label\": \"react select permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"React Select\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-select.com/\"\n  }), \"React Select\"), \" is the coolest ReactJS custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<select>\"), \" library.\"), mdx(\"p\", null, \"If you're not using it, we recommend using it instead of using simple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<select>\"), \" elements as it's highly customizable and provides an incredible API as we'll se below.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F All examples below are using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \", if you're not using it you can simply remove all type definitions as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.FC<Props>\"), \" from component definition.\")), mdx(\"h2\", {\n    \"id\": \"simple-select\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-select\",\n    \"aria-label\": \"simple select permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple select\"), mdx(\"p\", null, \"A simple replacer for default HTML \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<select>\"), \" element :)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"import React, { useRef, useEffect } from 'react';\\nimport ReactSelect, { OptionTypeBase, Props as SelectProps } from 'react-select';\\nimport { useField } from '@unform/core';\\n\\ninterface Props extends SelectProps<OptionTypeBase> {\\n  name: string;\\n}\\n\\nconst Select: React.FC<Props> = ({ name, ...rest }) => {\\n  const selectRef = useRef(null);\\n  const { fieldName, defaultValue, registerField, error } = useField(name);\\n\\n  useEffect(() => {\\n    registerField({\\n      name: fieldName,\\n      ref: selectRef.current,\\n      path: 'state.value',\\n      getValue: (ref: any) => {\\n        if (rest.isMulti) {\\n          if (!ref.state.value) {\\n            return [];\\n          }\\n\\n          return ref.state.value.map((option: OptionTypeBase) => option.value);\\n        } else {\\n          if (!ref.state.value) {\\n            return '';\\n          }\\n\\n          return ref.state.value.value;\\n        }\\n      }\\n    });\\n  }, [fieldName, registerField, rest.isMulti]);\\n\\n  return (\\n    <ReactSelect\\n      defaultValue={defaultValue}\\n      ref={selectRef}\\n      classNamePrefix=\\\"react-select\\\"\\n      {...rest}\\n    />\\n  );\\n};\\n\\nexport default Select;\\n\")), mdx(\"h2\", {\n    \"id\": \"creatable\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#creatable\",\n    \"aria-label\": \"creatable permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creatable\"), mdx(\"p\", null, \"User can choose between default options or create new ones.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"import React, { useRef, useEffect } from 'react';\\nimport { OptionTypeBase } from 'react-select';\\nimport Select, { Props as CreatableProps } from 'react-select/creatable'\\nimport { useField } from '@unform/core';\\n\\ninterface Props extends CreatableProps<OptionTypeBase> {\\n  name: string;\\n}\\n\\nconst CreatableSelect: React.FC<Props> = ({ name, ...rest }) => {\\n  const selectRef = useRef(null);\\n  const { fieldName, defaultValue, registerField, error } = useField(name);\\n\\n  useEffect(() => {\\n    registerField({\\n      name: fieldName,\\n      ref: selectRef.current,\\n      path: 'state.value',\\n      getValue: (ref: any) => {\\n        if (rest.isMulti) {\\n          if (!ref.state.value) {\\n            return [];\\n          }\\n\\n          return ref.state.value.map((option: OptionTypeBase) => option.value);\\n        } else {\\n          if (!ref.state.value) {\\n            return '';\\n          }\\n\\n          return ref.state.value.value;\\n        }\\n      }\\n    });\\n  }, [fieldName, registerField, rest.isMulti]);\\n\\n  return (\\n    <Select\\n      defaultValue={defaultValue}\\n      ref={selectRef}\\n      classNamePrefix=\\\"react-select\\\"\\n      {...rest}\\n    />\\n  );\\n};\\n\\nexport default CreatableSelect;\\n\")), mdx(\"h2\", {\n    \"id\": \"async\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#async\",\n    \"aria-label\": \"async permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Async\"), mdx(\"p\", null, \"Long lists of options? No problem! Use Async Select to make an asynchronous call to an API everytime user type something in the search box.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"import React, { useRef, useEffect } from 'react';\\nimport { OptionTypeBase } from 'react-select';\\nimport Select, { Props as AsyncProps } from 'react-select/async'\\nimport { useField } from '@unform/core';\\n\\ninterface Props extends AsyncProps<OptionTypeBase> {\\n  name: string;\\n}\\n\\nconst AsyncSelect: React.FC<Props> = ({ name, ...rest }) => {\\n  const selectRef = useRef(null);\\n  const { fieldName, defaultValue, registerField, error } = useField(name);\\n\\n  useEffect(() => {\\n    registerField({\\n      name: fieldName,\\n      ref: selectRef.current,\\n      path: 'select.state.value',\\n      getValue: (ref: any) => {\\n        if (rest.isMulti) {\\n          if (!ref.select.state.value) {\\n            return [];\\n          }\\n\\n          return ref.select.state.value.map((option: OptionTypeBase) => option.value);\\n        } else {\\n          if (!ref.select.state.value) {\\n            return '';\\n          }\\n\\n          return ref.select.state.value.value;\\n        }\\n      }\\n    });\\n  }, [fieldName, registerField, rest.isMulti]);\\n\\n  return (\\n    <Select\\n      cacheOptions\\n      defaultValue={defaultValue}\\n      ref={selectRef}\\n      classNamePrefix=\\\"react-select\\\"\\n      {...rest}\\n    />\\n  );\\n};\\n\\nexport default AsyncSelect;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/third-party/react-select/","prev":{"id":"c2a41e1f-9568-5a9f-a501-a76b3b69c8cc","fields":{"slug":"/third-party/react-datepicker/"},"frontmatter":{"title":""}},"next":{"id":"acaa5cb2-398c-5bab-9129-8ca792313f03","fields":{"slug":"/usage/shadowing/"},"frontmatter":{"title":"Shadowing"}}}}}