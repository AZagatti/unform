{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/recipes/simple-input/","result":{"data":{"mdx":{"id":"37f02b37-7e54-5bd7-88dd-65bcc8eba6b1","excerpt":"Simple input\nWith Unform, all of your input sources must be created by you. Here we have an example of a very simple input with support for label and error.","fields":{"slug":"/recipes/simple-input/"},"frontmatter":{"title":"Simple input","description":null,"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Simple input\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Simple input\\nWith Unform, all of your input sources must be created by you.\"), mdx(\"p\", null, \"Here we have an example of a very simple input with support for label and error.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=components/Input.js lineNumbers=true\",\n    \"title\": \"components/Input.js\",\n    \"lineNumbers\": \"true\"\n  }), \"import React, { useRef } from 'react';\\nimport { useField } from '@unform/core';\\n\\nexport default function Input({ name, label, ...rest }) {\\n  const inputRef = useRef(null);\\n\\n  const { fieldName, defaultValue, registerField, error } = useField(name);\\n\\n  useEffect(() => {\\n    registerField({\\n      name: fieldName,\\n      ref: inputRef.current,\\n      path: 'target.value',\\n    });\\n  }, [fieldName, registerField]);\\n\\n  return (\\n    <>\\n      <label htmlFor={fieldName}>{label}</label>\\n\\n      <input\\n        id={fieldName}\\n        ref={inputRef}\\n        defaultValue={defaultValue}\\n        {...rest}\\n      />\\n\\n      {error && <span className=\\\"error\\\">{error}</span>}\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/recipes/simple-input/","prev":{"id":"21614fa4-fb7c-5861-b042-26301a3c8ba9","fields":{"slug":"/recipes/styled-components/"},"frontmatter":{"title":"Usage with Styled Components"}},"next":{"id":"d4acb8c4-ab7f-5f81-9e44-060dcc4d588a","fields":{"slug":"/third-party/react-select/"},"frontmatter":{"title":"React Select"}}}}}