{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/guides/validation/","result":{"data":{"mdx":{"id":"474aa582-9cce-5621-9352-92cd7de3579d","excerpt":"Unform  does not includes validation by default , so you can choose the best library that fits for you. Let's see an example using  Yup  to validate form fieldsâ€¦","fields":{"slug":"/guides/validation/"},"frontmatter":{"title":"Validation","description":null,"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Validation\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Unform \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"does not includes validation by default\"), \", so you can choose the best library that fits for you.\"), mdx(\"p\", null, \"Let's see an example using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jquense/yup\"\n  }), \"Yup\"), \" to validate form fields.\"), mdx(\"h2\", {\n    \"id\": \"validation-with-yup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#validation-with-yup\",\n    \"aria-label\": \"validation with yup permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Validation with Yup\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"import * as Yup from 'yup';\\n\\nexport default function SignIn() {\\n  function handleSubmit(data) {\\n    try {\\n      const schema = Yup.object().shape({\\n        email: Yup.string().email().required(),\\n        password: Yup.string().min(6).required(),\\n      });\\n\\n      await schema.validate(data, {\\n        abortEarly: false,\\n      });\\n\\n      // Validation passed\\n      console.log(data);\\n    } catch (err) {\\n      if (err instanceof Yup.ValidationError) {\\n        // Validation failed\\n        console.log(err);\\n      }\\n    }\\n  }\\n\\n  return (...);\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"displaying-errors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#displaying-errors\",\n    \"aria-label\": \"displaying errors permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Displaying errors\"), mdx(\"p\", null, \"Unform provides an easy way to set and get errors inside inputs:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=SignIn.jsx lineNumbers=true\",\n    \"title\": \"SignIn.jsx\",\n    \"lineNumbers\": \"true\"\n  }), \"import React, { useRef } from 'react';\\nimport * as Yup from 'yup';\\n\\nexport default function SignIn() {\\n  const formRef = useRef(null);\\n\\n  function handleSubmit(data) {\\n    try {\\n      const schema = Yup.object().shape({\\n        email: Yup.string().email().required(),\\n        password: Yup.string().min(6).required(),\\n      });\\n\\n      await schema.validate(data, {\\n        abortEarly: false,\\n      });\\n\\n      // Validation passed\\n      console.log(data);\\n    } catch (err) {\\n      const validationErrors = {};\\n\\n      if (err instanceof Yup.ValidationError) {\\n        err.inner.forEach(error => {\\n          validationErrors[error.path] = error.message;\\n        });\\n\\n        formRef.current.setErrors(validationErrors);\\n      }\\n    }\\n  }\\n\\n  return (\\n    <Form ref={formRef} onSubmit={handleSubmit}>\\n      ...\\n    </Form>\\n  )\\n}\\n\")), mdx(\"p\", null, \"And inside the input component you need to get \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"error\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \" and display it.\"), mdx(\"p\", null, \"You can also use the error message to add new class or styles to input.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=components/Input.js lineNumbers=true\",\n    \"title\": \"components/Input.js\",\n    \"lineNumbers\": \"true\"\n  }), \"export default function Input({ name, ...rest }) {\\n  const inputRef = useRef(null);\\n  const { fieldName, defaultValue, registerField, error } = useField(name);\\n\\n  useEffect(...); // Same useEffect from basic form example\\n\\n  return (\\n    <>\\n      <input\\n        ref={inputRef}\\n        defaultValue={defaultValue}\\n        className={error ? 'has-error' : ''}\\n        {...rest}\\n      />\\n\\n      { error && <span className=\\\"error\\\">{error}</span> }\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/guides/validation/","prev":null,"next":{"id":"cc01e5d2-2969-556c-8474-d83f239c92eb","fields":{"slug":"/guides/reset-form/"},"frontmatter":{"title":"Reset form"}}}}}