{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/guides/get-set-field-error/","result":{"data":{"mdx":{"id":"99081564-2f73-585c-9253-67ccee64fb01","excerpt":"Unform provides an easy way to set or access input error using form reference.","fields":{"slug":"/guides/get-set-field-error/"},"frontmatter":{"title":"Get/set field error","description":null,"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Get/set field error\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Unform provides an easy way to set or access input error using form reference.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"export default function MyForm() {\\n  const formRef = useRef(null);\\n\\n  function functionThatGetsErrors() {\\n    // Get all errors\\n    const allErrors = formRef.current.getErrors();\\n\\n    // Get single field error\\n    const name = formRef.current.getFieldError('name');\\n    const street = formRef.current.getFieldError('address.street');\\n\\n    console.log(allErrors, name, street);\\n  }\\n\\n  function functionThatSetsErrors() {\\n    // Set all errors\\n    formRef.current.setErrors({\\n      name: 'Name is required',\\n      address: {\\n        street: 'Street not found',\\n      },\\n    });\\n\\n    // Set single field error\\n    formRef.current.setFieldError('name', 'Name is requored');\\n    formRef.current.setFieldError('address.street', 'Street not found');\\n  }\\n\\n  return (\\n    <Form ref={formRef}>\\n      <Input name=\\\"name\\\" />\\n\\n      <Scope path=\\\"address\\\">\\n        <Input name=\\\"street\\\" />\\n        <Input name=\\\"number\\\" />\\n      </Scope>\\n    </Form>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/guides/get-set-field-error/","prev":{"id":"a069888a-4801-5cac-b5af-fa6613f53626","fields":{"slug":"/guides/initial-data/"},"frontmatter":{"title":"Initial data"}},"next":{"id":"6c020bbe-3581-5192-9d35-77a7592e7e94","fields":{"slug":"/guides/complex-structures/"},"frontmatter":{"title":"Complex structures"}}}}}