{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/guides/get-set-field-value/","result":{"data":{"mdx":{"id":"fc60039b-5ee6-51df-aaa1-27449406d263","excerpt":"Unform provides an easy way to set or access input data using form reference.","fields":{"slug":"/guides/get-set-field-value/"},"frontmatter":{"title":"Get/set field value","description":null,"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Get/set field value\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Unform provides an easy way to set or access input data using form reference.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"lineNumbers=true\",\n    \"lineNumbers\": \"true\"\n  }), \"export default function MyForm() {\\n  const formRef = useRef(null);\\n\\n  function functionThatGetsData() {\\n    // Get all data\\n    const allData = formRef.current.getData();\\n\\n    // Get single field value\\n    const name = formRef.current.getFieldValue('name');\\n    const street = formRef.current.getFieldValue('address.street');\\n\\n    console.log(allData, name, street);\\n  }\\n\\n  function functionThatSetsData() {\\n    // Set all data\\n    formRef.current.setData({\\n      name: 'John Doe',\\n      address: {\\n        street: 'Some street',\\n      },\\n    });\\n\\n    // Set single field value\\n    formRef.current.setFieldValue('name', 'John Doe');\\n    formRef.current.setFieldValue('address.street', 'Some street');\\n  }\\n\\n  return (\\n    <Form ref={formRef}>\\n      <Input name=\\\"name\\\" />\\n\\n      <Scope path=\\\"address\\\">\\n        <Input name=\\\"street\\\" />\\n        <Input name=\\\"number\\\" />\\n      </Scope>\\n    </Form>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/guides/get-set-field-value/","prev":{"id":"31513513-962e-589a-800c-6bc204fea8a7","fields":{"slug":"/guides/manual-form-submit/"},"frontmatter":{"title":"Manual form submit"}},"next":{"id":"a069888a-4801-5cac-b5af-fa6613f53626","fields":{"slug":"/guides/initial-data/"},"frontmatter":{"title":"Initial data"}}}}}