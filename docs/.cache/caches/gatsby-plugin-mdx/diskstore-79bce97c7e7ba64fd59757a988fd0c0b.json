{"expireTime":9007200835732668000,"key":"gatsby-plugin-mdx-entire-payload-de2e66900254bedfa7249e11c17d0d74-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Why Unform?","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":14,"offset":13},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":14,"offset":13},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unform is simple, fast and extendable.","position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":3,"column":39,"offset":53},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":3,"column":39,"offset":53},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"‚ö°Ô∏è Performance","position":{"start":{"line":5,"column":4,"offset":58},"end":{"line":5,"column":18,"offset":72},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":55},"end":{"line":5,"column":18,"offset":72},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unform is fully focused on performance preventing inputs to rerender unnecessarily.","position":{"start":{"line":7,"column":1,"offset":74},"end":{"line":7,"column":84,"offset":157},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":74},"end":{"line":7,"column":84,"offset":157},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"üíú Hooks","position":{"start":{"line":9,"column":4,"offset":162},"end":{"line":9,"column":12,"offset":170},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":159},"end":{"line":9,"column":12,"offset":170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unform exposes the ","position":{"start":{"line":11,"column":1,"offset":172},"end":{"line":11,"column":20,"offset":191},"indent":[]}},{"type":"inlineCode","value":"useField","position":{"start":{"line":11,"column":20,"offset":191},"end":{"line":11,"column":30,"offset":201},"indent":[]}},{"type":"text","value":" hook, so you can use it to create your own form inputs, seriously, any user input can be stored as a field inside Unform.","position":{"start":{"line":11,"column":30,"offset":201},"end":{"line":11,"column":152,"offset":323},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":172},"end":{"line":11,"column":152,"offset":323},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"üì± React Native","position":{"start":{"line":13,"column":4,"offset":328},"end":{"line":13,"column":19,"offset":343},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":325},"end":{"line":13,"column":19,"offset":343},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With Unform, you can use the same API within web and mobile applications, keeping form structures simple and reusable.","position":{"start":{"line":15,"column":1,"offset":345},"end":{"line":15,"column":119,"offset":463},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":345},"end":{"line":15,"column":119,"offset":463},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"üî• Complex data & relationships","position":{"start":{"line":17,"column":4,"offset":468},"end":{"line":17,"column":35,"offset":499},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":465},"end":{"line":17,"column":35,"offset":499},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In front-end applications, most of the time, the form structure is based on how the data is received in the back-end, including relationships and nested fields.","position":{"start":{"line":19,"column":1,"offset":501},"end":{"line":19,"column":161,"offset":661},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":501},"end":{"line":19,"column":161,"offset":661},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With Unform ","position":{"start":{"line":21,"column":1,"offset":663},"end":{"line":21,"column":13,"offset":675},"indent":[]}},{"type":"link","title":null,"url":"/guides/nested-fields","children":[{"type":"text","value":"nested fields","position":{"start":{"line":21,"column":14,"offset":676},"end":{"line":21,"column":27,"offset":689},"indent":[]}}],"position":{"start":{"line":21,"column":13,"offset":675},"end":{"line":21,"column":51,"offset":713},"indent":[]}},{"type":"text","value":" API, you can create complex form structures with no pain.","position":{"start":{"line":21,"column":51,"offset":713},"end":{"line":21,"column":109,"offset":771},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":663},"end":{"line":21,"column":109,"offset":771},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":24,"column":1,"offset":774},"end":{"line":24,"column":31,"offset":804},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":24,"column":31,"offset":804}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"why-unform\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#why-unform\",\n    \"aria-label\": \"why unform permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Why Unform?\"), mdx(\"p\", null, \"Unform is simple, fast and extendable.\"), mdx(\"h2\", {\n    \"id\": \"Ô∏è-performance\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#%EF%B8%8F-performance\",\n    \"aria-label\": \"Ô∏è performance permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"\\u26A1\\uFE0F Performance\"), mdx(\"p\", null, \"Unform is fully focused on performance preventing inputs to rerender unnecessarily.\"), mdx(\"h2\", {\n    \"id\": \"-hooks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#-hooks\",\n    \"aria-label\": \" hooks permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"\\uD83D\\uDC9C Hooks\"), mdx(\"p\", null, \"Unform exposes the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useField\"), \" hook, so you can use it to create your own form inputs, seriously, any user input can be stored as a field inside Unform.\"), mdx(\"h2\", {\n    \"id\": \"-react-native\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#-react-native\",\n    \"aria-label\": \" react native permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"\\uD83D\\uDCF1 React Native\"), mdx(\"p\", null, \"With Unform, you can use the same API within web and mobile applications, keeping form structures simple and reusable.\"), mdx(\"h2\", {\n    \"id\": \"-complex-data--relationships\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#-complex-data--relationships\",\n    \"aria-label\": \" complex data  relationships permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"\\uD83D\\uDD25 Complex data & relationships\"), mdx(\"p\", null, \"In front-end applications, most of the time, the form structure is based on how the data is received in the back-end, including relationships and nested fields.\"), mdx(\"p\", null, \"With Unform \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/guides/nested-fields\"\n  }), \"nested fields\"), \" API, you can create complex form structures with no pain.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"why-unform\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#why-unform\",\n        \"aria-label\": \"why unform permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Why Unform?`}</h1>\n    <p>{`Unform is simple, fast and extendable.`}</p>\n    <h2 {...{\n      \"id\": \"Ô∏è-performance\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#%EF%B8%8F-performance\",\n        \"aria-label\": \"Ô∏è performance permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`‚ö°Ô∏è Performance`}</h2>\n    <p>{`Unform is fully focused on performance preventing inputs to rerender unnecessarily.`}</p>\n    <h2 {...{\n      \"id\": \"-hooks\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#-hooks\",\n        \"aria-label\": \" hooks permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`üíú Hooks`}</h2>\n    <p>{`Unform exposes the `}<inlineCode parentName=\"p\">{`useField`}</inlineCode>{` hook, so you can use it to create your own form inputs, seriously, any user input can be stored as a field inside Unform.`}</p>\n    <h2 {...{\n      \"id\": \"-react-native\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#-react-native\",\n        \"aria-label\": \" react native permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`üì± React Native`}</h2>\n    <p>{`With Unform, you can use the same API within web and mobile applications, keeping form structures simple and reusable.`}</p>\n    <h2 {...{\n      \"id\": \"-complex-data--relationships\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#-complex-data--relationships\",\n        \"aria-label\": \" complex data  relationships permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`üî• Complex data & relationships`}</h2>\n    <p>{`In front-end applications, most of the time, the form structure is based on how the data is received in the back-end, including relationships and nested fields.`}</p>\n    <p>{`With Unform `}<a parentName=\"p\" {...{\n        \"href\": \"/guides/nested-fields\"\n      }}>{`nested fields`}</a>{` API, you can create complex form structures with no pain.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}